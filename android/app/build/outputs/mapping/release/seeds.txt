com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.facebook.react.bridge.JSInstance
com.reactnative.ivpusic.imagepicker.IvpusicImagePickerFileProvider
com.facebook.jni.DestructorThread$DestructorList
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.soloader.SysUtil$Api14Utils
com.google.android.material.appbar.AppBarLayout$Behavior
com.facebook.react.common.LifecycleState
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.react.modules.storage.AsyncStorageModule
com.facebook.jni.HybridClassBase
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
com.facebook.jni.DestructorThread$Destructor
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.facebook.react.bridge.JSExceptionHandler
androidx.appcompat.widget.ButtonBarLayout
com.facebook.react.bridge.Inspector
com.facebook.react.bridge.JavaMethodWrapper$9
androidx.transition.FragmentTransitionSupport
androidx.appcompat.view.menu.ListMenuItemView
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.facebook.react.bridge.CatalystInstanceImpl
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.facebook.react.bridge.JavaJSExecutor
com.google.android.material.textfield.TextInputLayout
com.facebook.common.internal.DoNotStrip
com.facebook.react.bridge.ReactMarker
com.swmansion.rnscreens.ScreenStackFragment
com.facebook.react.animated.EventAnimationDriver
com.facebook.react.bridge.RuntimeScheduler
com.facebook.react.bridge.ActivityEventListener
com.reactnative.ivpusic.imagepicker.PickerModule
com.facebook.react.bridge.ModuleSpec
com.facebook.react.turbomodule.core.TurboModuleManager$1
com.google.android.material.internal.BaselineLayout
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
androidx.activity.ComponentActivity$3
com.facebook.jni.HybridData
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.modules.blob.FileReaderModule
com.facebook.react.bridge.Arguments
com.facebook.soloader.DoNotOptimize
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.facebook.react.uimanager.BaseViewManager
com.facebook.react.bridge.Inspector$Page
com.facebook.react.bridge.CallbackImpl
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.hermes.instrumentation.HermesSamplingProfiler
androidx.core.graphics.drawable.IconCompat
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.react.bridge.DynamicFromMap
com.facebook.react.bridge.JavaMethodWrapper$6
com.google.android.material.textfield.TextInputEditText
com.facebook.react.bridge.ModuleHolder
com.facebook.react.devsupport.HMRClient
com.facebook.fbreact.specs.NativeTimingSpec
androidx.activity.ComponentActivity$4
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.facebook.react.devsupport.LogBoxModule
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.bridge.MemoryPressure
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.facebook.react.uimanager.UIManagerModule
com.facebook.react.bridge.ReadableNativeMap
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
com.facebook.react.uimanager.ComponentNameResolverManager
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.summarizer.newarchitecture.components.MainComponentsRegistry
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
com.facebook.react.bridge.JavaMethodWrapper$4
com.yalantis.ucrop.task.BitmapCropTask
com.facebook.fbreact.specs.NativeRedBoxSpec
androidx.savedstate.Recreator
androidx.fragment.app.Fragment$5
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.facebook.react.bridge.Arguments$2
com.google.android.material.appbar.MaterialToolbar
com.yalantis.ucrop.view.UCropView
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.bridge.NativeArgumentsParseException
com.facebook.react.bridge.JavaOnlyArray$1
androidx.savedstate.SavedStateRegistry$1
com.facebook.jni.IteratorHelper
com.facebook.react.bridge.ReadableArray
com.facebook.react.bridge.JSIModuleProvider
com.facebook.hermes.intl.Collator
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.facebook.react.fabric.SurfaceHandlerBinding
androidx.fragment.app.DialogFragment
androidx.lifecycle.FullLifecycleObserverAdapter
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
com.google.android.material.transformation.FabTransformationScrimBehavior
com.yalantis.ucrop.view.GestureCropImageView
androidx.appcompat.widget.ViewStubCompat
com.facebook.react.turbomodule.core.TurboModuleManager$2
com.facebook.react.bridge.ProxyJavaScriptExecutor
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.react.bridge.ReactContext$1
androidx.appcompat.widget.FitWindowsLinearLayout
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.google.android.material.theme.MaterialComponentsViewInflater
androidx.lifecycle.ProcessLifecycleInitializer
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.react.fabric.FabricUIManager
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.google.android.material.datepicker.MaterialCalendarGridView
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.bridge.AssertionException
androidx.core.app.RemoteActionCompat
com.facebook.react.bridge.CatalystInstanceImpl$3
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.react.views.modal.ReactModalHostManager
com.facebook.react.devsupport.JSDevSupport
com.facebook.react.bridge.OnBatchCompleteListener
androidx.lifecycle.SavedStateHandleController
com.facebook.react.modules.vibration.VibrationModule
com.facebook.react.bridge.PromiseImpl
com.facebook.react.bridge.DynamicFromMap$1
com.facebook.react.bridge.BackgroundExecutor
com.facebook.react.bridge.WritableMap
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.react.bridge.NoSuchKeyException
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.facebook.react.bridge.JSBundleLoader$4
com.facebook.react.common.mapbuffer.WritableMapBuffer
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.react.bridge.NativeArray
com.facebook.react.modules.clipboard.ClipboardModule
com.facebook.react.modules.statusbar.StatusBarModule
com.facebook.react.bridge.Inspector$RemoteConnection
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.swmansion.rnscreens.ScreenViewManager
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.react.modules.permissions.PermissionsModule
com.facebook.react.devsupport.JSCHeapCapture
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.google.android.material.datepicker.MaterialTextInputPicker
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.facebook.react.module.model.ReactModuleInfo
com.facebook.fbreact.specs.NativeAppearanceSpec
com.summarizer.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate
androidx.appcompat.widget.ActionMenuView
androidx.annotation.Keep
com.facebook.jni.NativeRunnable
com.facebook.systrace.TraceListener
com.swmansion.rnscreens.SearchBarManager
com.facebook.yoga.YogaLogLevel
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder
com.facebook.react.bridge.UiThreadUtil
com.facebook.react.views.slider.ReactSliderManager
com.facebook.react.fabric.Binding
com.facebook.react.views.text.ReactRawTextManager
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.react.fabric.mounting.mountitems.MountItem
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.bridge.NativeModule$NativeMethod
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.react.fabric.StateWrapperImpl
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.facebook.react.bridge.JavaOnlyMap$1
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.facebook.jni.DestructorThread
com.facebook.react.bridge.ReactIgnorableMountingException
com.facebook.react.bridge.ReactContext$2
com.facebook.react.jscexecutor.JSCExecutor
com.summarizer.MainApplication
com.facebook.react.bridge.NativeArrayInterface
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
androidx.startup.InitializationProvider
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.facebook.react.bridge.JSBundleLoader$5
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.turbomodule.core.TurboModuleManager
com.facebook.imagepipeline.memory.NativeMemoryChunk
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.react.bridge.NativeMap
com.facebook.react.bridge.JSBundleLoader$2
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.yalantis.ucrop.UCropActivity
com.facebook.react.bridge.JavaJSExecutor$Factory
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.facebook.react.modules.appearance.AppearanceModule
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.hermes.intl.NumberFormat
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.react.bridge.SoftAssertions
com.facebook.react.bridge.ContextBaseJavaModule
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.uimanager.ViewManager
com.google.android.material.transformation.ExpandableTransformationBehavior
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.react.modules.core.RCTNativeAppEventEmitter
androidx.lifecycle.SingleGeneratedAdapterObserver
com.facebook.react.bridge.RuntimeExecutor
com.facebook.react.bridge.JSIModulePackage
com.th3rdwave.safeareacontext.SafeAreaProviderManager
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.yalantis.ucrop.view.OverlayView
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.fbreact.specs.NativeVibrationSpec
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.react.modules.fabric.ReactFabric
com.facebook.react.modules.core.DeviceEventManagerModule
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.google.android.material.button.MaterialButton
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.fbreact.specs.NativeModalManagerSpec
com.facebook.jni.DestructorThread$1
com.facebook.fbreact.specs.NativeClipboardSpec
com.facebook.react.bridge.CatalystInstanceImpl$1$1
androidx.fragment.app.FragmentManager$6
com.facebook.react.bridge.ReactBridge
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.facebook.react.bridge.PerformanceCounter
com.facebook.proguard.annotations.KeepGettersAndSetters
androidx.appcompat.widget.AlertDialogLayout
androidx.appcompat.widget.ActionBarOverlayLayout
com.swmansion.rnscreens.ScreenStackViewManager
com.facebook.yoga.YogaNative
com.facebook.react.bridge.ReactCxxErrorHandler
com.facebook.react.modules.image.ImageLoaderModule
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.facebook.fbreact.specs.NativeJSDevSupportSpec
com.facebook.react.fabric.CoreComponentsRegistry
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.uimanager.RootViewManager
com.facebook.jni.CppException
com.facebook.jni.MapIteratorHelper
com.facebook.react.bridge.JSBundleLoader
com.facebook.react.bridge.UIManager
com.facebook.soloader.Api18TraceUtils
com.google.android.material.datepicker.MaterialCalendar
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.modules.camera.ImageStoreManager
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
androidx.recyclerview.widget.LinearLayoutManager
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.facebook.hermes.reactexecutor.HermesExecutor
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.react.config.ReactFeatureFlags
com.facebook.react.bridge.CatalystInstanceImpl$2
com.facebook.react.modules.appstate.AppStateModule
com.facebook.react.bridge.JavaModuleWrapper
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.appcompat.widget.ActionBarContainer
com.facebook.react.bridge.Promise
com.facebook.react.bridge.InvalidIteratorException
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.facebook.react.views.text.ReactTextViewManager
com.google.android.material.internal.NavigationMenuView
com.facebook.react.bridge.MemoryPressureListener
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.modules.deviceinfo.DeviceInfoModule
androidx.appcompat.view.menu.ExpandedMenuView
com.google.android.material.bottomsheet.BottomSheetBehavior
com.facebook.react.bridge.UIManagerListener
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.google.android.material.textview.MaterialTextView
com.facebook.react.bridge.JavaMethodWrapper$10
com.facebook.react.modules.debug.AnimationsDebugModule
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.facebook.react.bridge.JSIModuleType
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.recyclerview.widget.GridLayoutManager
com.facebook.react.modules.toast.ToastModule
com.facebook.react.bridge.ReactMethod
com.facebook.react.bridge.NativeModule
com.facebook.react.modules.core.JSTimers
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.bridge.JsonWriterHelper
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.jni.CppSystemErrorException
com.yalantis.ucrop.view.widget.AspectRatioTextView
com.facebook.react.views.scroll.ReactScrollViewManager
com.summarizer.MainActivity
com.facebook.react.animated.NativeAnimatedModule
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.bridge.ReadableType
com.facebook.react.bridge.ReadableNativeArray$1
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
com.facebook.react.bridge.ReadableMap
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.facebook.proguard.annotations.DoNotStrip
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.yoga.YogaNodeJNIBase
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.react.bridge.FallbackJSBundleLoader
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.bridge.BaseJavaModule
com.facebook.react.bridge.JavaScriptContextHolder
javax.inject.Provider
androidx.core.widget.NestedScrollView
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.util.RCTLog
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.react.bridge.ReadableNativeMap$2
com.google.android.material.transformation.ExpandableBehavior
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.google.android.material.chip.Chip
com.facebook.react.bridge.JavaMethodWrapper$3
androidx.versionedparcelable.ParcelImpl
androidx.appcompat.widget.DialogTitle
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.bridge.ReactCallback
com.facebook.react.modules.core.TimingModule
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.facebook.react.views.view.ReactViewManager
com.facebook.react.bridge.LifecycleEventListener
com.facebook.react.bridge.ColorPropConverter
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.facebook.react.modules.dialog.DialogModule
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.facebook.react.bridge.Arguments$1
com.google.android.material.internal.NavigationMenuItemView
com.facebook.react.bridge.Dynamic
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.react.bridge.ReactMarkerConstants
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.fabric.ReactNativeConfig
com.facebook.react.bridge.WritableNativeArray
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.google.android.material.transformation.FabTransformationBehavior
com.facebook.react.bridge.JavaMethodWrapper$1
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
androidx.emoji2.text.EmojiCompatInitializer$1
com.facebook.react.bridge.JSIModuleHolder
com.facebook.react.bridge.ReadableNativeArray
com.facebook.react.bridge.JavaScriptModule
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.react.bridge.JSIModule
com.facebook.jni.ThreadScopeSupport
com.facebook.soloader.SoLoader
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
androidx.appcompat.view.menu.ActionMenuItemView
com.facebook.react.bridge.JSCJavaScriptExecutor
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.facebook.react.bridge.ReadableNativeMap$1$1
com.facebook.react.modules.websocket.WebSocketModule
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.bridge.DynamicFromObject
kotlin.internal.jdk8.JDK8PlatformImplementations
com.facebook.react.bridge.ReactModuleWithSpec
androidx.core.util.Pools$SimplePool
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.react.bridge.DefaultJSExceptionHandler
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.android.material.snackbar.SnackbarContentLayout
androidx.activity.ComponentActivity$5
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.turbomodule.core.interfaces.TurboModule
androidx.core.app.CoreComponentFactory
com.facebook.react.bridge.CatalystInstanceImpl$5
androidx.coordinatorlayout.widget.CoordinatorLayout
com.facebook.jni.UnknownCppException
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
com.facebook.react.modules.intent.IntentModule
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
androidx.recyclerview.widget.RecyclerView
com.facebook.react.bridge.ReactApplicationContext
com.facebook.react.bridge.ReactContextBaseJavaModule
com.google.android.material.behavior.SwipeDismissBehavior
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.facebook.react.bridge.ReadableMapKeySetIterator
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
androidx.lifecycle.Lifecycling$1
androidx.emoji2.text.EmojiCompatInitializer
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.facebook.react.fabric.ComponentFactory
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.swmansion.rnscreens.ScreenFragment
androidx.core.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.JSBundleLoader$1
com.facebook.react.bridge.WritableArray
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.google.android.material.chip.ChipGroup
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.react.bridge.JSIModuleRegistry
com.facebook.react.uimanager.SimpleViewManager
com.facebook.yoga.YogaLogger
com.facebook.react.bridge.JavaScriptExecutorFactory
androidx.activity.result.ActivityResultRegistry$1
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.react.modules.sound.SoundManagerModule
androidx.activity.ImmLeaksCleaner
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.facebook.react.bridge.GuardedRunnable
androidx.appcompat.widget.SearchView
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
com.facebook.react.devsupport.JSException
com.facebook.react.bridge.GuardedResultAsyncTask
com.facebook.jni.annotations.DoNotStrip
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.facebook.react.bridge.ReactContext
com.facebook.react.bridge.JavaOnlyMap
com.facebook.react.views.image.ReactImageManager
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.jni.HybridData$Destructor
com.facebook.react.bridge.CatalystInstanceImpl$4
com.facebook.hermes.intl.DateTimeFormat
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.fbreact.specs.NativeImageEditorSpec
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.react.bridge.Callback
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.facebook.react.bridge.CatalystInstance
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.react.bridge.Systrace
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.facebook.react.bridge.ReadableNativeMap$1
com.facebook.fbreact.specs.NativeLogBoxSpec
androidx.appcompat.widget.ContentFrameLayout
androidx.appcompat.widget.Toolbar
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.modules.blob.BlobCollector
androidx.lifecycle.SavedStateHandleController$1
com.facebook.react.bridge.WindowFocusChangeListener
com.google.android.material.internal.CheckableImageButton
com.google.android.material.datepicker.MaterialDatePicker
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
androidx.appcompat.widget.ActionBarContextView
com.facebook.react.bridge.GuardedAsyncTask
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.uimanager.ViewGroupManager
com.facebook.react.modules.blob.BlobModule
com.facebook.hermes.intl.Intl
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.facebook.react.modules.share.ShareModule
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
androidx.viewpager2.adapter.FragmentStateAdapter$5
kotlin.internal.jdk7.JDK7PlatformImplementations
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.ResultCollector resultCollector
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.facebook.react.config.ReactFeatureFlags: boolean useOverflowInset
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.reactnative.ivpusic.imagepicker.PickerModule: boolean multiple
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReadableMap options
androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_RESOURCES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_FAILED_TO_SHOW_PICKER
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String TAG
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_FIELDS
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD
com.facebook.react.config.ReactFeatureFlags: boolean enableSpannableCache
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: long NO_ID
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CANNOT_LAUNCH_CAMERA
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.reactnative.ivpusic.imagepicker.PickerModule: boolean freeStyleCropEnabled
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_ERROR_WHILE_CLEANING_FILES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.facebook.react.config.ReactFeatureFlags: boolean useGlobalCallbackCleanupScopeUsingRetainJSCallback
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.facebook.react.devsupport.JSDevSupport: java.lang.String MODULE_NAME
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
com.facebook.react.config.ReactFeatureFlags: boolean enableBridgelessArchitecture
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
com.facebook.yoga.YogaNodeJNIBase: float[] arr
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_FAILED_TO_OPEN_CAMERA
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
androidx.recyclerview.widget.RecyclerView: int mInitialTouchY
androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CAMERA_IS_NOT_AVAILABLE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
androidx.appcompat.app.AppCompatViewInflater: int[] sAccessibilityPaneTitle
androidx.appcompat.app.AppCompatViewInflater: int[] sAccessibilityHeading
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions
androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator
androidx.recyclerview.widget.RecyclerView: boolean mIsAttached
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModulePromiseAsyncDispatch
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_CAMERA_PERMISSION_MSG
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.summarizer.newarchitecture.components.MainComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.facebook.react.config.ReactFeatureFlags: boolean enableRuntimeSchedulerInTurboModule
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_IMAGE_DATA_FOUND
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String TAG
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mJavaModuleProvider
com.reactnative.ivpusic.imagepicker.PickerModule: int width
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarWidgetColor
com.reactnative.ivpusic.imagepicker.PickerModule: boolean disableCropperColorSetters
com.facebook.react.config.ReactFeatureFlags: boolean enableAggressiveEventEmitterCleanup
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
com.facebook.react.config.ReactFeatureFlags: boolean enableViewRecycling
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperStatusBarColor
androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.config.ReactFeatureFlags: boolean enableRuntimeScheduler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.react.uimanager.ViewManager: java.lang.String NAME
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String mCurrentMediaPath
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CALLBACK_ERROR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
com.facebook.react.config.ReactFeatureFlags: boolean enableSynchronizationForAnimated
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_ACTIVITY_DOES_NOT_EXIST
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_LIBRARY_PERMISSION_MSG
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
com.reactnative.ivpusic.imagepicker.PickerModule: boolean cropping
androidx.recyclerview.widget.RecyclerView: int mTouchSlop
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.facebook.react.config.ReactFeatureFlags: boolean enableCppPropsIteratorSetter
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
com.facebook.react.uimanager.ViewManager: int mRecyclableViewsBufferSize
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.reactnative.ivpusic.imagepicker.PickerModule: boolean hideBottomControls
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_PICKER_CANCELLED_KEY
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperActiveWidgetColor
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
androidx.recyclerview.widget.RecyclerView: int mLastTouchY
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarColor
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mTurboModuleHolders
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mTurboModuleCleanupStarted
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.config.ReactFeatureFlags: boolean shouldRememberAllocatedViews
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.facebook.react.turbomodule.core.TurboModulePerfLogger: boolean sIsSoLibraryLoaded
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int mModuleId
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_PERF_LOGS
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor executor
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
com.facebook.react.config.ReactFeatureFlags: boolean disablePreallocationOnClone
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
com.reactnative.ivpusic.imagepicker.PickerModule: int IMAGE_PICKER_REQUEST
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.Compression compression
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.facebook.react.modules.storage.AsyncStorageModule: int MAX_SQL_KEYS
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.reactnative.ivpusic.imagepicker.PickerModule: boolean includeExif
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
androidx.recyclerview.widget.RecyclerView: int mScrollState
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
com.facebook.react.devsupport.JSDevSupport: com.facebook.react.devsupport.JSDevSupport$DevSupportCallback mCurrentCallback
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mTurboModuleCleanupLock
com.google.android.material.theme.MaterialComponentsViewInflater: int floatingToolbarItemBackgroundResId
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String NAME
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
androidx.recyclerview.widget.RecyclerView: boolean DEBUG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
com.facebook.react.bridge.DynamicFromArray: int mIndex
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.facebook.react.config.ReactFeatureFlags: boolean enableRemoveDeleteTreeInstruction
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_LIBRARY_PERMISSION_KEY
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.yalantis.ucrop.model.AspectRatio: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.jni.CppSystemErrorException: int errorCode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String mediaType
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: boolean mShouldDeallocateEventDispatcher
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean sIsSoLibraryLoaded
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String TAG
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: boolean sIsSoLibraryLoaded
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.reactnative.ivpusic.imagepicker.PickerModule: int height
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: int mLastTouchX
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.facebook.react.config.ReactFeatureFlags: boolean insertZReorderBarriersOnViewGroupChildren
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
androidx.recyclerview.widget.RecyclerView: java.lang.String TAG
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mCxxModuleProvider
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
com.facebook.react.config.ReactFeatureFlags: int turboModuleBindingMode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.facebook.react.config.ReactFeatureFlags: boolean enableEarlyScheduledMountItemExecution
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.reactnative.ivpusic.imagepicker.PickerModule: boolean cropperCircleOverlay
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
com.facebook.react.modules.storage.AsyncStorageModule: boolean mShuttingDown
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.views.slider.ReactSliderManager: int STYLE
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
com.facebook.react.turbomodule.core.TurboModuleManager: boolean sIsSoLibraryLoaded
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper
com.facebook.react.config.ReactFeatureFlags: boolean enableLargeTextMeasureCache
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModuleManagerCallbackCleanupScope
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION
com.facebook.react.config.ReactFeatureFlags: boolean enableLockFreeEventDispatcher
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule mModule
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.events.EventBeatManager mEventBeatManager
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver
androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
androidx.recyclerview.widget.RecyclerView: int mScrollPointerId
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricPendingEventQueue
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.reactnative.ivpusic.imagepicker.PickerModule: android.net.Uri mCameraCaptureURI
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
androidx.recyclerview.widget.RecyclerView: int VERTICAL
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int sHolderCount
com.reactnative.ivpusic.imagepicker.PickerModule: boolean showCropGuidelines
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_VIEW_NOT_FOUND
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier mReactDatabaseSupplier
androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_CAMERA_PERMISSION_KEY
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.facebook.react.config.ReactFeatureFlags: boolean mapBufferSerializationEnabled
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
androidx.recyclerview.widget.RecyclerView: long FOREVER_NS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.reactnative.ivpusic.imagepicker.PickerModule: boolean includeBase64
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.reactnative.ivpusic.imagepicker.PickerModule: boolean useFrontCamera
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_PICKER_CANCELLED_MSG
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
androidx.recyclerview.widget.RecyclerView: int mInitialTouchX
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
androidx.appcompat.app.AppCompatViewInflater: androidx.collection.SimpleArrayMap sConstructorMap
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarTitle
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize
com.facebook.react.uimanager.UIManagerModule: int mNumRootViews
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.facebook.react.config.ReactFeatureFlags: boolean warnOnLegacyNativeModuleSystemUse
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_EXCEPTION
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.facebook.react.config.ReactFeatureFlags: boolean enableScrollEventThrottle
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.appcompat.app.AppCompatViewInflater: int[] sScreenReaderFocusable
com.reactnative.ivpusic.imagepicker.PickerModule: boolean showCropFrame
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String NAME
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.facebook.react.config.ReactFeatureFlags: boolean enableDelayedViewStateDeletion
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsTryingToCreate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
com.reactnative.ivpusic.imagepicker.PickerModule: int CAMERA_PICKER_REQUEST
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed
com.facebook.react.bridge.Inspector$Page: int mId
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
com.reactnative.ivpusic.imagepicker.PickerModule: boolean enableRotationGesture
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsDoneCreatingModule
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.String mName
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.jni.NativeRunnable: void run()
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void getAsyncSelection(android.app.Activity,android.net.Uri,boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
androidx.core.content.FileProvider: FileProvider()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.NativeModule: void invalidate()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.NativeModule: java.lang.String getName()
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.react.JSInterpreter: com.facebook.react.JSInterpreter[] values()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void startCropping(android.app.Activity,android.net.Uri)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: void invalidateGlows()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.yalantis.ucrop.view.UCropView: UCropView(android.content.Context,android.util.AttributeSet)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.react.views.textinput.ReactEditText: boolean getBlurOnSubmit()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.react.views.slider.ReactSlider: void setValue(double)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.yalantis.ucrop.view.OverlayView: void setDimmedColor(int)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.yalantis.ucrop.view.TransformImageView: TransformImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback access$700(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.TimingModule: void initialize()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.bridge.ReactContext: void destroy()
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate access$000(com.facebook.react.devsupport.LogBoxModule)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(android.view.View,boolean)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.yalantis.ucrop.view.OverlayView: int getFreestyleCropMode()
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.jni.HybridData: HybridData()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
com.yalantis.ucrop.view.GestureCropImageView: void setDoubleTapScaleSteps(int)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.Long access$700(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ReactContext: void onHostPause()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createVideoFile()
com.google.android.material.chip.Chip: void setChipTextResource(int)
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.reactnative.ivpusic.imagepicker.PickerModule: void initiateCamera(android.app.Activity)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageOutputPath()
com.facebook.react.bridge.JSIModule: void initialize()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(android.view.View,double)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.summarizer.MainActivity: MainActivity()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: NativeAsyncSQLiteDBStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: void clearOldPositions()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$600(com.facebook.react.animated.NativeAnimatedModule)
androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.yalantis.ucrop.view.OverlayView: void setOverlayViewChangeListener(com.yalantis.ucrop.callback.OverlayViewChangeListener)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
androidx.recyclerview.widget.RecyclerView: void initAdapterManager()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setMiddleLineColor(int)
com.facebook.yoga.YogaNode: YogaNode()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.summarizer.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.bridge.ReactBridge: ReactBridge()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.summarizer.MainApplication: MainApplication()
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.turbomodule.core.TurboModuleManager$1: TurboModuleManager$1(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
androidx.fragment.app.DialogFragment: DialogFragment()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.Screen: void setFragment(com.swmansion.rnscreens.ScreenFragment)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue access$300(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.yalantis.ucrop.view.TransformImageView: void setMaxBitmapSize(int)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)
com.yalantis.ucrop.view.OverlayView: com.yalantis.ucrop.callback.OverlayViewChangeListener getOverlayViewChangeListener()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: void permissionsCheck(android.app.Activity,com.facebook.react.bridge.Promise,java.util.List,java.util.concurrent.Callable)
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
com.facebook.react.views.slider.ReactSliderManager: void setValue(android.view.View,double)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstanceImpl: void warnOnLegacyNativeModuleSystemUse()
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.reactnative.ivpusic.imagepicker.PickerModule: void openCropper(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.recyclerview.widget.RecyclerView: void initAutofill()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.yalantis.ucrop.view.CropImageView: com.yalantis.ucrop.callback.CropBoundsChangeListener getCropBoundsChangeListener()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void maybeLoadSoLibrary()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.turbomodule.core.TurboModuleManager$2: TurboModuleManager$2(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.reactnative.ivpusic.imagepicker.PickerModule: boolean isCameraAvailable(android.app.Activity)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.yalantis.ucrop.view.OverlayView: void setShowCropGrid(boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReactContext$1: void run()
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropEnabled(boolean)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.reactnative.ivpusic.imagepicker.PickerModule: void cleanSingle(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.google.android.material.chip.Chip: float getChipIconSize()
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getSelection(android.app.Activity,android.net.Uri,boolean)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
com.facebook.react.devsupport.JSDevSupport: void onFailure(double,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.modules.core.TimingModule: void onHostResume()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.yalantis.ucrop.view.TransformImageView: int getMaxBitmapSize()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
com.google.android.material.chip.Chip: void setGravity(int)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: BackgroundExecutor$NamedThreadFactory(java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getImage(android.app.Activity,java.lang.String)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.google.android.material.chip.Chip: void setElevation(float)
androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.react.devsupport.JSDevSupport: void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$300(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.yalantis.ucrop.UCropActivity: UCropActivity()
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.Bitmap validateVideo(java.lang.String)
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule: void getJSHierarchy(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.yalantis.ucrop.view.TransformImageView: float getCurrentAngle()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.events.EventBeatManager)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeY(int)
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
com.facebook.react.modules.core.TimingModule: java.lang.String getName()
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setAspectRatio(com.yalantis.ucrop.model.AspectRatio)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: void invalidate()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.google.android.material.card.MaterialCardView: void setRadius(float)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void releaseGlows()
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onFailure(double,java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.activity.ComponentActivity: ComponentActivity()
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnative.ivpusic.imagepicker.PickerModule: void deleteRecursive(java.io.File)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.summarizer.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate: boolean canCreateTurboModule(java.lang.String)
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.facebook.react.bridge.ReadableArray: int size()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
com.yalantis.ucrop.view.CropImageView: void setCropBoundsChangeListener(com.yalantis.ucrop.callback.CropBoundsChangeListener)
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.facebook.react.fabric.FabricUIManager: void preInitializeViewManagers(java.util.List)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragment getFragment()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void requestLayout()
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.facebook.react.modules.storage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
androidx.recyclerview.widget.RecyclerView: void dispatchLayout()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.yalantis.ucrop.view.OverlayView: void setCropGridColor(int)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.Bitmap access$600(com.reactnative.ivpusic.imagepicker.PickerModule,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIsAccessibilityLink(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
com.facebook.common.time.MonotonicClock: long now()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: NativeAsyncLocalStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.facebook.jni.HybridData$Destructor: void destruct()
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.facebook.react.JSInterpreter: com.facebook.react.JSInterpreter valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.modules.storage.AsyncStorageModule: void clearSensitiveData()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.facebook.react.modules.storage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.reactnative.ivpusic.imagepicker.PickerModule: void cameraPickerResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.ResultCollector access$800(com.reactnative.ivpusic.imagepicker.PickerModule)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void cancelScroll()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
com.yalantis.ucrop.view.GestureCropImageView: void setRotateEnabled(boolean)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.jni.CppException: CppException(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.FabricUIManager: void initialize()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.yalantis.ucrop.view.CropImageView: float getMinScale()
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.summarizer.newarchitecture.components.MainComponentsRegistry: com.summarizer.newarchitecture.components.MainComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void configureCropperColors(com.yalantis.ucrop.UCrop$Options)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getJavaModule(java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.startup.InitializationProvider: InitializationProvider()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.google.android.material.button.MaterialButton: void setElevation(float)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.yalantis.ucrop.view.OverlayView: void setCropGridCornerColor(int)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void startCreatingModule()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.BitmapFactory$Options validateImage(java.lang.String)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.yalantis.ucrop.view.widget.AspectRatioTextView: AspectRatioTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$100(com.facebook.react.animated.NativeAnimatedModule)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getName()
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long,boolean)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.reactnative.ivpusic.imagepicker.PickerModule: void openPicker(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactEditText: void setBlurOnSubmit(java.lang.Boolean)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.facebook.react.devsupport.HMRClient: void disable()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
com.facebook.react.fabric.ReactNativeConfig: long getInt64(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getConstants()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setScrollingListener(com.yalantis.ucrop.view.widget.HorizontalProgressWheelView$ScrollingListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getCroppedRectMap(android.content.Intent)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setLines(int)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$100(com.reactnative.ivpusic.imagepicker.PickerModule,java.io.File)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getExtension(android.content.Context,android.net.Uri)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: NativeJSDevSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.yalantis.ucrop.view.CropImageView: float getTargetAspectRatio()
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher access$000(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.yalantis.ucrop.view.CropImageView: void setTargetAspectRatio(float)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.yalantis.ucrop.view.TransformImageView: void setScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.yalantis.ucrop.view.OverlayView: void setCircleDimmedLayer(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setActiveColor(int)
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void onNewIntent(android.content.Intent)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String getName()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int getModuleId()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.yalantis.ucrop.view.GestureCropImageView: int getDoubleTapScaleSteps()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void absorbGlows(int,int)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.yalantis.ucrop.view.TransformImageView: void setImageMatrix(android.graphics.Matrix)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReadableMap access$500(com.reactnative.ivpusic.imagepicker.PickerModule)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.Inspector$Page: int getId()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.yalantis.ucrop.view.CropImageView: void setMaxScaleMultiplier(float)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.yalantis.ucrop.view.GestureCropImageView: void setScaleEnabled(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.jni.HybridData: boolean isValid()
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.react.uimanager.UIManagerModule: void preInitializeViewManagers(java.util.List)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
okhttp3.Protocol: okhttp3.Protocol[] values()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView: void jumpToPositionForSmoothScroller(int)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void endCreatingModule()
com.facebook.react.fabric.Binding: void driveCxxAnimations()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.yalantis.ucrop.view.OverlayView: void setCropGridColumnCount(int)
androidx.cardview.widget.CardView: void setRadius(float)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()
com.facebook.react.bridge.ModuleHolder: void destroy()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.facebook.react.views.slider.ReactSliderManager: void setStep(android.view.View,double)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$100(com.facebook.react.modules.image.ImageLoaderModule)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.facebook.react.devsupport.JSDevSupport: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.facebook.react.modules.core.TimingModule: void onHostPause()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList access$300(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.slider.ReactSlider: double getStepValue()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.recyclerview.widget.RecyclerView: void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.facebook.react.fabric.Binding: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges[] values()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.yalantis.ucrop.view.TransformImageView: com.yalantis.ucrop.model.ExifInfo getExifInfo()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.GestureCropImageView getCropImageView()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
androidx.lifecycle.ViewModel: ViewModel()
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.yalantis.ucrop.view.OverlayView: OverlayView(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.yalantis.ucrop.view.TransformImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$300(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.facebook.react.bridge.JavaJSExecutor: void close()
com.google.android.material.chip.Chip: float getTextEndPadding()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.facebook.react.modules.storage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.google.android.material.theme.MaterialComponentsViewInflater: boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.GuardedRunnable: void run()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: NativeDatePickerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.cardview.widget.CardView: void setCardElevation(float)
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
androidx.cardview.widget.CardView: float getMaxCardElevation()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.bridge.BaseJavaModule: void initialize()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForInsert(int,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
com.facebook.react.ReactActivity: ReactActivity()
com.facebook.react.bridge.CatalystInstance: void initialize()
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.facebook.react.devsupport.JSDevSupport: void onSuccess(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.JSDevSupport: void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isCreatingModule()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.facebook.react.animated.NativeAnimatedModule: void access$900(com.facebook.react.animated.NativeAnimatedModule,int)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.yalantis.ucrop.view.CropImageView: void setCropRect(android.graphics.RectF)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.reactnative.ivpusic.imagepicker.PickerModule: void croppingResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String access$000(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void clear(com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.reactnative.ivpusic.imagepicker.PickerModule: void initiatePicker(android.app.Activity)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.recyclerview.widget.RecyclerView: void resetScroll()
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getName()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
com.facebook.react.bridge.ReactBridge: void staticInit()
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadSoLibrary()
androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.reactnative.ivpusic.imagepicker.PickerModule: void clean(com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.reactnative.ivpusic.imagepicker.PickerModule: void setConfiguration(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.OverlayView getOverlayView()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
androidx.fragment.app.Fragment: Fragment()
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.fabric.SurfaceHandler,android.content.Context,android.view.View)
com.facebook.react.fabric.FabricUIManager: boolean access$400(com.facebook.react.fabric.FabricUIManager)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String resolveRealPath(android.app.Activity,android.net.Uri,boolean)
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
com.facebook.react.bridge.CatalystInstance: void destroy()
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
com.reactnative.ivpusic.imagepicker.PickerModule: void imagePickerResult(android.app.Activity,int,int,android.content.Intent)
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBoundsAnimDuration(long)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
com.facebook.react.modules.core.TimingModule: void invalidate()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.facebook.react.uimanager.ViewManager: ViewManager()
androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.modules.storage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SysUtil$Api14Utils: SysUtil$Api14Utils()
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.google.android.material.chip.Chip: float getIconStartPadding()
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.yalantis.ucrop.view.OverlayView: void setCropFrameStrokeWidth(int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void setModule(com.facebook.react.turbomodule.core.interfaces.TurboModule)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: void access$100(androidx.recyclerview.widget.RecyclerView,int)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void dispatchChildAttached(android.view.View)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactRootView: int getUIManagerType()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.fabric.SurfaceHandler)
com.facebook.jni.IteratorHelper: boolean hasNext()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.facebook.hermes.intl.Intl: Intl()
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getTmpDir(android.app.Activity)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: TurboModuleManager$TurboModuleHolder()
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.facebook.react.uimanager.ViewManager: void trimMemory()
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
androidx.appcompat.app.AppCompatViewInflater: void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.facebook.react.modules.dialog.DialogModule: void invalidate()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule()
com.facebook.react.devsupport.HMRClient: void enable()
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
com.yalantis.ucrop.view.OverlayView: void setCropGridRowCount(int)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.yalantis.ucrop.view.GestureCropImageView: float getDoubleTapTargetScale()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void viewRangeUpdate(int,int,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
com.google.android.material.button.MaterialButton: int getIconPadding()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(android.view.View,boolean)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder,boolean)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeX(int)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.react.bridge.ReactContext: void onHostDestroy()
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.reactnative.ivpusic.imagepicker.PickerModule: void getVideo(android.app.Activity,java.lang.String,java.lang.String)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.fabric.events.EventBeatManager)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.yalantis.ucrop.view.OverlayView: void setShowCropFrame(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.yalantis.ucrop.task.BitmapCropTask: boolean cropCImg(java.lang.String,java.lang.String,int,int,int,int,float,float,int,int,int,int)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void clear(com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
com.facebook.react.modules.storage.AsyncStorageModule: void initialize()
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.reactnative.ivpusic.imagepicker.PickerModule: void openCamera(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$200(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.jni.HybridClassBase: HybridClassBase()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.fabric.FabricUIManager: boolean access$500(com.facebook.react.fabric.FabricUIManager)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
com.facebook.react.devsupport.JSDevSupport: JSDevSupport(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
com.facebook.jni.DestructorThread$1: void run()
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.fabric.SurfaceHandler,android.view.View)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.yalantis.ucrop.view.TransformImageView: void setTransformImageListener(com.yalantis.ucrop.view.TransformImageView$TransformImageListener)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForMove(int,int)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue access$400(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void access$1100(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(java.util.EnumSet)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isDoneCreatingModule()
com.facebook.react.devsupport.LogBoxModule: java.lang.String getName()
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.facebook.react.bridge.JavaOnlyArray: int size()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.yalantis.ucrop.view.TransformImageView: float getCurrentScale()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.bridge.Arguments$1: int size()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.Compression access$900(com.reactnative.ivpusic.imagepicker.PickerModule)
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.google.android.material.chip.Chip: void setMinLines(int)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Dynamic: double asDouble()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()
com.yalantis.ucrop.view.OverlayView: void setCropGridStrokeWidth(int)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$200(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getMimeType(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.modules.storage.AsyncStorageModule: void invalidate()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.yalantis.ucrop.view.OverlayView: void setCropFrameColor(int)
com.facebook.react.bridge.Arguments: Arguments()
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid(boolean,boolean)
com.facebook.jni.DestructorThread: DestructorThread()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$800(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onSuccess(java.lang.String)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.yalantis.ucrop.view.CropImageView: float getMaxScale()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding access$600(com.facebook.react.fabric.FabricUIManager)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)
com.facebook.react.modules.blob.BlobModule: void initialize()
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
com.facebook.react.bridge.Dynamic: boolean isNull()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin valueOf(java.lang.String)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: void maybeLoadSoLibrary()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.devsupport.JSDevSupport: java.lang.String getName()
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
com.reactnative.ivpusic.imagepicker.IvpusicImagePickerFileProvider: IvpusicImagePickerFileProvider()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.reactnative.ivpusic.imagepicker.PickerModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.fabric.Binding: void stopSurface(int)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.UIManager: void preInitializeViewManagers(java.util.List)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.fabric.Binding: Binding()
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.cardview.widget.CardView: float getCardElevation()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.reactnative.ivpusic.imagepicker.PickerModule: PickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$100(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.recyclerview.widget.RecyclerView: boolean access$200(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.yalantis.ucrop.view.OverlayView: void setTargetAspectRatio(float)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.facebook.react.bridge.DynamicFromMap: void recycle()
androidx.recyclerview.widget.RecyclerView: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling(int)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.BackgroundExecutor$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.facebook.react.bridge.Dynamic: void recycle()
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.google.android.material.card.MaterialCardView: float getProgress()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.turbomodule.core.TurboModuleManager: void maybeLoadSoLibrary()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.facebook.react.bridge.NativeModule: void initialize()
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.summarizer.newarchitecture.components.MainComponentsRegistry: MainComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$400(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity,android.net.Uri)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
com.yalantis.ucrop.view.OverlayView: android.graphics.RectF getCropViewRect()
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.core.app.ComponentActivity: ComponentActivity()
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri)
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createImageFile()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.facebook.react.fabric.FabricUIManager: void onCatalystInstanceDestroy()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBounds(boolean)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.CompositeReactPackageTurboModuleManagerDelegate: void addTurboModuleManagerDelegate(com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: HorizontalProgressWheelView(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: float getRadius()
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageInputPath()
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(android.view.View,double)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
androidx.recyclerview.widget.RecyclerView: void saveOldPositions()
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.yalantis.ucrop.view.GestureCropImageView: GestureCropImageView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
com.yalantis.ucrop.view.CropImageView: CropImageView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.Long getVideoDuration(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropMode(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.jni.HybridData: void resetNative()
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.facebook.react.bridge.ReadableArray: int getInt(int)
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.facebook.react.modules.storage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.summarizer.newarchitecture.components.MainComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.devsupport.LogBoxModule: void hide()
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.yalantis.ucrop.view.TransformImageView: android.graphics.Bitmap getViewBitmap()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
androidx.recyclerview.widget.RecyclerView: void stopScroll()
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
androidx.cardview.widget.CardView: float getRadius()
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,boolean,boolean)
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.facebook.react.ReactRootView: int getRootViewTag()
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.bridge.UIManager: void stopSurface(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
com.facebook.react.bridge.WritableArray: void pushNull()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getBase64StringFromFile(java.lang.String)
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.facebook.react.bridge.Dynamic: int asInt()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
